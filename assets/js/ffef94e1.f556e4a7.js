"use strict";(self.webpackChunktau_docs=self.webpackChunktau_docs||[]).push([[754],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),l=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(d.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=l(n),m=a,h=s["".concat(d,".").concat(m)]||s[m]||u[m]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var d in t)hasOwnProperty.call(t,d)&&(c[d]=t[d]);c.originalType=e,c[s]="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7646:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:3,description:"Once you have a UI, render it onto the screen!"},i="Render the UI",c={unversionedId:"getting-started/render",id:"getting-started/render",title:"Render the UI",description:"Once you have a UI, render it onto the screen!",source:"@site/docs/getting-started/render.md",sourceDirName:"getting-started",slug:"/getting-started/render",permalink:"/docs/getting-started/render",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Once you have a UI, render it onto the screen!"},sidebar:"tutorialSidebar",previous:{title:"Basics of Tau",permalink:"/docs/getting-started/basics-of-tau"},next:{title:"Dynamic UI",permalink:"/docs/getting-started/dynamic"}},d={},l=[{value:"Option One: <code>ScreenUIRenderer</code>",id:"option-one-screenuirenderer",level:2},{value:"Option Two: <code>HudUIRenderer</code>",id:"option-two-huduirenderer",level:2}],p={toc:l},s="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(s,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"render-the-ui"},"Render the UI"),(0,a.kt)("p",null,"Now you have a UI, time to render it onto the screen to see it.\nCurrently, you have 2 options when it comes to rendering a Tau UI."),(0,a.kt)("h2",{id:"option-one-screenuirenderer"},"Option One: ",(0,a.kt)("inlineCode",{parentName:"h2"},"ScreenUIRenderer")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ScreenUIRenderer")," will render the UI onto the screen as a Minecraft Screen. Meaning it will have the gray translucent background\nand it will pause the game when you open the screen."),(0,a.kt)("p",null,"You can open the screen with "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"Minecraft.getInstance().setScreen(new ScreenUIRenderer(new ExampleUI()));\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ScreenUIRenderer")," just extends the Minecraft ",(0,a.kt)("inlineCode",{parentName:"p"},"Screen")," class. You can extend ",(0,a.kt)("inlineCode",{parentName:"p"},"ScreenUIRenderer")," and override ",(0,a.kt)("inlineCode",{parentName:"p"},"shouldPauseGame")," or anything\nelse you want to change if you'd like."),(0,a.kt)("h2",{id:"option-two-huduirenderer"},"Option Two: ",(0,a.kt)("inlineCode",{parentName:"h2"},"HudUIRenderer")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"HudUIRenderer")," have a ",(0,a.kt)("inlineCode",{parentName:"p"},"render")," method that takes in a ",(0,a.kt)("inlineCode",{parentName:"p"},"MainWindow"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"MatrixStack")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"partialTicks"),". This will directly render the\nUI onto the screen. Here is an example of how you would do it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@SubscribeEvent\npublic static void onRenderOverlay(RenderGameOverlayEvent.Post e) {\n    if (e.getType() == RenderGameOverlayEvent.ElementType.HOTBAR) {\n        new HudUIRenderer(new ExampleUI()).render(e.getWindow(), e.getMatrixStack(), e.getPartialTicks());\n    }\n}\n")),(0,a.kt)("p",null,"You can create the instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"HudUIRenderer")," and store it instead of creating it every time it's rendered.\nBut that is not the focus of this documentation."))}u.isMDXComponent=!0}}]);